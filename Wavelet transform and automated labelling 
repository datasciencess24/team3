# Wavelet transform function without variance extraction that automatically adds the label 0
# to 'NOK' data and 1 to 'OK' data

import os
import pywt
import numpy as np
from sklearn.preprocessing import StandardScaler

def process_audio(audio, file_path):
    # Perform wavelet transform
    wavelet_coeffs = pywt.wavedec(audio, 'db2') # For better resolution, use 'db3' or higher

    # Standardize the readings
    scaler = StandardScaler()
    standardized_coeffs = [scaler.fit_transform(coeff.reshape(-1, 1)).flatten() for coeff in wavelet_coeffs]

    # Store these readings as a multidimensional variable
    processed_audio = np.array(standardized_coeffs)

    # Determine the label based on the directory of the audio file
    if 'Data/NOK_Measurements' in file_path:
        label = 0
    elif 'Data/OK_Measurements' in file_path:
        label = 1
    else:
        raise ValueError(f'Unexpected file path: {file_path}')

    return processed_audio, label